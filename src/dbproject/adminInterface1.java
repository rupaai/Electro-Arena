package dbproject;


import java.awt.Color;
import java.sql.ResultSet;
import javax.swing.BorderFactory;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JTextField;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableColumn;
import javax.swing.table.TableColumnModel;
import javax.swing.table.TableModel;
import net.proteanit.sql.DbUtils;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author USER
 */
public class adminInterface1 extends javax.swing.JFrame {
   
    DatabaseHandler ob = new DatabaseHandler();
    int click = 1, col_no, selectedData;
    int clicku = 1;
    private String user, pass, dbName, tbName, query;
    private String deleteVal, col_name, updateVal;
    private String[] col_names;
    JLabel[] jl;
    JTextField[] jt;
    TableModel model = null;
     String[] val;
    public adminInterface1() {
        initComponents();
        
        user = "root";
        pass = "";
        dbName = "electro";
        ob.setConnection(dbName, user, pass);
        
        listPanel.setVisible(false);
        scroller.setVisible(false);
        //columns.setVisible(false);
        option.setVisible(false);
        jScrollPane1.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        insertBtn = new javax.swing.JButton();
        updateBtn = new javax.swing.JButton();
        deleteBtn = new javax.swing.JButton();
        listPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        dbTable = new javax.swing.JTable();
        listItems = new javax.swing.JPanel();
        prodBtn = new javax.swing.JButton();
        catBtn = new javax.swing.JButton();
        brandBtn = new javax.swing.JButton();
        userBtn = new javax.swing.JButton();
        option = new javax.swing.JPanel();
        scroller = new javax.swing.JScrollPane();
        columns = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel2.setBackground(new java.awt.Color(36, 47, 85));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        insertBtn.setBackground(new java.awt.Color(97, 212, 195));
        insertBtn.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        insertBtn.setForeground(new java.awt.Color(255, 255, 255));
        insertBtn.setText("INSERT");
        insertBtn.setToolTipText("");
        insertBtn.setBorder(null);
        insertBtn.setContentAreaFilled(false);
        insertBtn.setOpaque(true);
        insertBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertBtnActionPerformed(evt);
            }
        });
        jPanel2.add(insertBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 70, 200, 130));

        updateBtn.setBackground(new java.awt.Color(97, 212, 195));
        updateBtn.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        updateBtn.setForeground(new java.awt.Color(255, 255, 255));
        updateBtn.setText("UPDATE");
        updateBtn.setBorder(null);
        updateBtn.setContentAreaFilled(false);
        updateBtn.setOpaque(true);
        updateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateBtnActionPerformed(evt);
            }
        });
        jPanel2.add(updateBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 240, 200, 130));

        deleteBtn.setBackground(new java.awt.Color(97, 212, 195));
        deleteBtn.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        deleteBtn.setForeground(new java.awt.Color(255, 255, 255));
        deleteBtn.setText("DELETE");
        deleteBtn.setBorder(null);
        deleteBtn.setContentAreaFilled(false);
        deleteBtn.setOpaque(true);
        deleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBtnActionPerformed(evt);
            }
        });
        jPanel2.add(deleteBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 410, 200, 130));

        listPanel.setOpaque(false);
        listPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        dbTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        dbTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dbTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(dbTable);

        listPanel.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, 720, 430));

        listItems.setOpaque(false);

        prodBtn.setBackground(new java.awt.Color(97, 212, 195));
        prodBtn.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        prodBtn.setForeground(new java.awt.Color(255, 255, 255));
        prodBtn.setText("PRODUCT");
        prodBtn.setBorder(null);
        prodBtn.setContentAreaFilled(false);
        prodBtn.setOpaque(true);
        prodBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prodBtnActionPerformed(evt);
            }
        });

        catBtn.setBackground(new java.awt.Color(36, 47, 85));
        catBtn.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        catBtn.setForeground(new java.awt.Color(204, 204, 204));
        catBtn.setText("CATAGORY");
        catBtn.setBorder(null);
        catBtn.setContentAreaFilled(false);
        catBtn.setOpaque(true);
        catBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                catBtnActionPerformed(evt);
            }
        });

        brandBtn.setBackground(new java.awt.Color(97, 212, 195));
        brandBtn.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        brandBtn.setForeground(new java.awt.Color(255, 255, 255));
        brandBtn.setText("BRAND");
        brandBtn.setBorder(null);
        brandBtn.setContentAreaFilled(false);
        brandBtn.setOpaque(true);
        brandBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                brandBtnActionPerformed(evt);
            }
        });

        userBtn.setBackground(new java.awt.Color(36, 47, 85));
        userBtn.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        userBtn.setForeground(new java.awt.Color(204, 204, 204));
        userBtn.setText("USER");
        userBtn.setBorder(null);
        userBtn.setContentAreaFilled(false);
        userBtn.setOpaque(true);
        userBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout listItemsLayout = new javax.swing.GroupLayout(listItems);
        listItems.setLayout(listItemsLayout);
        listItemsLayout.setHorizontalGroup(
            listItemsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(listItemsLayout.createSequentialGroup()
                .addGroup(listItemsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(userBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(prodBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(catBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(brandBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        listItemsLayout.setVerticalGroup(
            listItemsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, listItemsLayout.createSequentialGroup()
                .addContainerGap(12, Short.MAX_VALUE)
                .addComponent(prodBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(catBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(brandBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(userBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        listPanel.add(listItems, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 50, 200, 300));

        scroller.setBackground(new java.awt.Color(51, 255, 51));

        columns.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout columnsLayout = new javax.swing.GroupLayout(columns);
        columns.setLayout(columnsLayout);
        columnsLayout.setHorizontalGroup(
            columnsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 332, Short.MAX_VALUE)
        );
        columnsLayout.setVerticalGroup(
            columnsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 340, Short.MAX_VALUE)
        );

        scroller.setViewportView(columns);

        jButton1.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("jButton1");
        jButton1.setAutoscrolls(true);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout optionLayout = new javax.swing.GroupLayout(option);
        option.setLayout(optionLayout);
        optionLayout.setHorizontalGroup(
            optionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(optionLayout.createSequentialGroup()
                .addGroup(optionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(optionLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(scroller, javax.swing.GroupLayout.PREFERRED_SIZE, 334, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(optionLayout.createSequentialGroup()
                        .addGap(96, 96, 96)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(25, Short.MAX_VALUE))
        );
        optionLayout.setVerticalGroup(
            optionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(optionLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(scroller, javax.swing.GroupLayout.PREFERRED_SIZE, 342, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 47, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(listPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 721, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(option, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 44, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 760, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(143, 143, 143)
                        .addComponent(listPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 459, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(151, 151, 151)
                        .addComponent(option, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1370, 750));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void insertBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertBtnActionPerformed
        Object source = evt.getSource();
        
        if(source == insertBtn){
            if(clicku%2!=0){
                //jScrollPane1.setVisible(false);
                listItems.setVisible(true);
                listPanel.setVisible(true);
                //dbTable.setVisible(false);
            }
            else if(clicku%2==0){
                listItems.setVisible(true);
                listPanel.setVisible(false);
            }
            clicku++;
        }
        jButton1.setText("INSERT");
    }//GEN-LAST:event_insertBtnActionPerformed

    private void updateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateBtnActionPerformed
        Object source = evt.getSource();
        if(source == updateBtn){
            if(clicku%2!=0){
               // dbTable.setVisible(false);
                listPanel.setVisible(true);
                listItems.setVisible(true);
            }
            else if(clicku%2==0){
                listItems.setVisible(false);
                listPanel.setVisible(false);
            }
            clicku++;
        }
        jButton1.setText("UPDATE");
    }//GEN-LAST:event_updateBtnActionPerformed

    private void prodBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prodBtnActionPerformed
        ResultSet result = ob.testQuery("product");
        listItems.setVisible(false);
        option.setVisible(true);
         jScrollPane1.setVisible(true);
         dbTable.setModel(DbUtils.resultSetToTableModel(result));
         if(clicku%2==0){
            
             col_no = dbTable.getColumnCount();
         System.out.println(col_no);
         col_names = new String[col_no + 1];
         JTableHeader th = dbTable.getTableHeader();
         System.out.println(clicku);
        TableColumnModel tcm = th.getColumnModel();

        for (int x = 0, y = tcm.getColumnCount(); x < y; x++) {
            TableColumn tc = tcm.getColumn(x);
            col_names[x] = tc.getHeaderValue().toString();
        }
        jt = new JTextField[col_no + 1];
        jl = new JLabel[col_no + 1];
       
        int j = 10;
        scroller.setVisible(true);
        columns.setVisible(true);
        
        System.out.println(col_names[2]+" "+col_no);
        //catagoryList.setVisible(true);
                 for(int i = 0; i<col_no; i++){
            System.out.println("fdsfas");
            jt[i] = new JTextField();
            jl[i] = new JLabel();
            jl[i].setText(col_names[i]);
            
            
            jt[i].setForeground(Color.red);
            //jt[i].setBorder(BorderFactory.createEmptyBorder(4, 4, 4, 4));
            //jt[i].setContentAreaFilled(false);
            //jt[i].setOpaque(true);
            jl[i].setSize(80, 30);
            
            jt[i].setSize(128,30);
            jt[i].setLocation(90, j);
            jl[i].setLocation(10, j);
            columns.add(jt[i]);
            columns.add(jl[i]);
           // scroller.add(jl[i]);
           // scroller.add(jt[i]);
            
            //ct[i].setFont(font);
            j += 30;
                }
         }
         else{
             
             option.remove(scroller);
             
         }
         
    }//GEN-LAST:event_prodBtnActionPerformed

    private void brandBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_brandBtnActionPerformed
        tbName = "brand";
        ResultSet result = ob.testQuery(tbName);
        listItems.setVisible(false);
        jScrollPane1.setVisible(true);
        //option.setVisible(false);
        option.setVisible(true);
            dbTable.setModel(DbUtils.resultSetToTableModel(result));
              if(clicku%2==0){
                  
             col_no = dbTable.getColumnCount();
         System.out.println(col_no);
         col_names = new String[col_no + 1];
         JTableHeader th = dbTable.getTableHeader();
         System.out.println(clicku);
        TableColumnModel tcm = th.getColumnModel();

        for (int x = 0, y = tcm.getColumnCount(); x < y; x++) {
            TableColumn tc = tcm.getColumn(x);
            col_names[x] = tc.getHeaderValue().toString();
        }
        jt = new JTextField[col_no + 1];
        jl = new JLabel[col_no + 1];
       
        int j = 10;
        scroller.setVisible(true);
        columns.setVisible(true);
        
        System.out.println(col_names[2]+" "+col_no);
        //catagoryList.setVisible(true);
                 for(int i = 0; i<col_no; i++){
            System.out.println("fdsfas");
            jt[i] = new JTextField();
            jl[i] = new JLabel();
            jl[i].setText(col_names[i]);
            
            
            jt[i].setForeground(Color.red);
            //jt[i].setBorder(BorderFactory.createEmptyBorder(4, 4, 4, 4));
            //jt[i].setContentAreaFilled(false);
            //jt[i].setOpaque(true);
            jl[i].setSize(80, 30);
            
            jt[i].setSize(128,30);
            jt[i].setLocation(90, j);
            jl[i].setLocation(10, j);
            columns.add(jt[i]);
            columns.add(jl[i]);
           // scroller.add(jl[i]);
           // scroller.add(jt[i]);
            
            //ct[i].setFont(font);
            j += 30;
                }
         }
              else{
             
             option.remove(scroller);
             
         }
         
    }//GEN-LAST:event_brandBtnActionPerformed

    private void deleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBtnActionPerformed
        Object source = evt.getSource();
        if(source == deleteBtn){
            if(click%2!=0){
                //dbTable.setVisible(false);
                listPanel.setVisible(true);
                listItems.setVisible(true);
            }
            else if(click%2==0){
                listItems.setVisible(false);
                listPanel.setVisible(false);
            }
            click++;
        }
        jButton1.setText("DELETE");
    }//GEN-LAST:event_deleteBtnActionPerformed

    private void catBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_catBtnActionPerformed
        tbName = "catagory";
        ResultSet result = ob.testQuery(tbName);
        listItems.setVisible(false);
        jScrollPane1.setVisible(true);
        option.setVisible(true);

            dbTable.setModel(DbUtils.resultSetToTableModel(result));
         if(clicku%2==0){
                 //jScrollPane1.setVisible(true);
             col_no = dbTable.getColumnCount();
         System.out.println(col_no);
         col_names = new String[col_no + 1];
         JTableHeader th = dbTable.getTableHeader();
         System.out.println(clicku);
        TableColumnModel tcm = th.getColumnModel();

        for (int x = 0, y = tcm.getColumnCount(); x < y; x++) {
            TableColumn tc = tcm.getColumn(x);
            col_names[x] = tc.getHeaderValue().toString();
        }
        jt = new JTextField[col_no + 1];
        jl = new JLabel[col_no + 1];
       
        int j = 10;
        scroller.setVisible(true);
        columns.setVisible(true);
                System.out.println(col_names[2]+" "+col_no);
        //catagoryList.setVisible(true);
                 for(int i = 0; i<col_no; i++){
            System.out.println("fdsfas");
            jt[i] = new JTextField();
            jl[i] = new JLabel();
            jl[i].setText(col_names[i]);
            
            
            jt[i].setForeground(Color.red);
            //jt[i].setBorder(BorderFactory.createEmptyBorder(4, 4, 4, 4));
            //jt[i].setContentAreaFilled(false);
            //jt[i].setOpaque(true);
            jl[i].setSize(80, 30);
            
            jt[i].setSize(128,30);
            jt[i].setLocation(90, j);
            jl[i].setLocation(10, j);
            columns.add(jt[i]);
            columns.add(jl[i]);
           // scroller.add(jl[i]);
           // scroller.add(jt[i]);
            
            //ct[i].setFont(font);
            j += 30;
                }
         }
         else{
             
             option.remove(scroller);
             
         }
         
    }//GEN-LAST:event_catBtnActionPerformed

    private void userBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userBtnActionPerformed
       tbName = "usertable";
        ResultSet result = ob.testQuery(tbName);
        listItems.setVisible(false);
        jScrollPane1.setVisible(true);
        option.setVisible(true);
            dbTable.setModel(DbUtils.resultSetToTableModel(result));
         if(clicku%2==0){
                  //jScrollPane1.setVisible(true);
             col_no = dbTable.getColumnCount();
         System.out.println(col_no);
         col_names = new String[col_no + 1];
         JTableHeader th = dbTable.getTableHeader();
         System.out.println(clicku);
        TableColumnModel tcm = th.getColumnModel();

        for (int x = 0, y = tcm.getColumnCount(); x < y; x++) {
            TableColumn tc = tcm.getColumn(x);
            col_names[x] = tc.getHeaderValue().toString();
        }
        jt = new JTextField[col_no + 1];
        jl = new JLabel[col_no + 1];
       
        int j = 10;
        scroller.setVisible(true);
        columns.setVisible(true);
        
        System.out.println(col_names[2]+" "+col_no);
        //catagoryList.setVisible(true);
                 for(int i = 0; i<col_no; i++){
            //System.out.println("fdsfas");
            jt[i] = new JTextField();
            jl[i] = new JLabel();
            jl[i].setText(col_names[i]);
            
            
            jt[i].setForeground(Color.red);
            //jt[i].setBorder(BorderFactory.createEmptyBorder(4, 4, 4, 4));
            //jt[i].setContentAreaFilled(false);
            //jt[i].setOpaque(true);
            jl[i].setSize(80, 30);
            
            jt[i].setSize(128,30);
            jt[i].setLocation(90, j);
            jl[i].setLocation(10, j);
            columns.add(jt[i]);
            columns.add(jl[i]);
           // scroller.add(jl[i]);
           // scroller.add(jt[i]);
            
            //ct[i].setFont(font);
            j += 30;
                }
         }
         else{
             
             option.remove(scroller);
             
         }
         
    }//GEN-LAST:event_userBtnActionPerformed

    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if("INSERT".equals(jButton1.getText())){
            val = new String[col_no + 1];
            System.out.println(tbName);
           for (int i = 0; i < col_no; i++) {
                    val[i] = jt[i].getText();
                    System.out.println(jt[i].getText());
                }
          ob.insertData(tbName, val);
        }
        else if(jButton1.getText()=="DELETE"){
            if (model != null) {
            deleteVal = model.getValueAt(selectedData, 0).toString();

            //table_Name = dbTable_Name.getSelectedItem().toString();

            col_name = model.getColumnName(0);

            ob.deleteData(tbName, col_name, deleteVal);
        }
        }
        else if(jButton1.getText()== "UPDATE"){
            query = null;
        if (model != null) {
            updateVal = model.getValueAt(selectedData, 0).toString();
            //table_Name = dbTable_Name.getSelectedItem().toString();
            col_no = dbTable.getColumnCount();
            col_names = new String[col_no + 1];
            query = "UPDATE " + tbName + " SET ";
            
            for (int j = 0; j <= col_no - 1; j++) {
                query += model.getColumnName(j) + " = ";
                query += "?";
                if (j != col_no - 1) {
                    query += ",";
                }
            }
            
            query += " WHERE ";
            query += model.getColumnName(0);
            query += " = '" + updateVal + "'";
            System.out.println(query);
            JTableHeader th = dbTable.getTableHeader();

        TableColumnModel tcm = th.getColumnModel();

        for (int x = 0, y = tcm.getColumnCount(); x < y; x++) {
            TableColumn tc = tcm.getColumn(x);
            col_names[x] = tc.getHeaderValue().toString();
        }
        }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void dbTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dbTableMouseClicked
        selectedData = dbTable.getSelectedRow();

        model = dbTable.getModel();
    }//GEN-LAST:event_dbTableMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(adminInterface1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(adminInterface1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(adminInterface1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(adminInterface1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new adminInterface1().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton brandBtn;
    private javax.swing.JButton catBtn;
    private javax.swing.JPanel columns;
    private javax.swing.JTable dbTable;
    private javax.swing.JButton deleteBtn;
    private javax.swing.JButton insertBtn;
    private javax.swing.JButton jButton1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel listItems;
    private javax.swing.JPanel listPanel;
    private javax.swing.JPanel option;
    private javax.swing.JButton prodBtn;
    private javax.swing.JScrollPane scroller;
    private javax.swing.JButton updateBtn;
    private javax.swing.JButton userBtn;
    // End of variables declaration//GEN-END:variables
}
